package com.example.androidthings.myproject;

import com.google.android.things.pio.Gpio;

/**
 * Template for IDD Fall 2017 HW2 (text entry device)
 * Created by bjoern on 9/5/17.
 */

public class Hw2TemplateApp extends SimplePicoPro {
    @Override
    public void setup() {
        //set two GPIOs to input
        pinMode(GPIO_37,Gpio.DIRECTION_IN);
        setEdgeTrigger(GPIO_37,Gpio.EDGE_BOTH);

        pinMode(GPIO_34,Gpio.DIRECTION_IN);
        setEdgeTrigger(GPIO_34,Gpio.EDGE_BOTH);

        pinMode(GPIO_10,Gpio.DIRECTION_IN);
        setEdgeTrigger(GPIO_10,Gpio.EDGE_BOTH);

        pinMode(GPIO_174,Gpio.DIRECTION_IN);
        setEdgeTrigger(GPIO_174,Gpio.EDGE_BOTH);

        pinMode(GPIO_175,Gpio.DIRECTION_IN);
        setEdgeTrigger(GPIO_175,Gpio.EDGE_BOTH);

        //SELECTOR BUTTON
        pinMode(GPIO_32, Gpio.DIRECTION_IN);
        setEdgeTrigger(GPIO_32, Gpio.EDGE_BOTH);

    }

    @Override
    public void loop() {
        //nothing to do here
        }
    public int count37=0; //counter variable for GPIO_37
    public int count34=0; //counter variable for GPIO_34
    public int count10=0; //counter variable for GPIO_10
    public int count174=0; //counter variable for GPIO_174
    public int count175=0; //counter variable for GPIO_175
    public char x;
    @Override
    void digitalEdgeEvent(Gpio pin, boolean value) {
        println("digitalEdgeEvent"+pin+", "+value);
        // when 128 goes from LOW to HIGH
        // this is on button button release for pull-up resistors
        if(pin==GPIO_37 && value==LOW) {
            count37++;
            delay(250);
            //printStringToScreen("check");
        }
        if(count37==1){
            x='a';
        }
        if (count37==2){
            x='b';
        }
        if (count37==3){
            x='c';
        }
        if (count37==4){
            x='d';
        }
        if (count37==5){
            x='e';
        }
        if (count37==6){
            x='f';
        }

        if(pin==GPIO_34 && value==LOW) {
            count34++;
            delay(250);
            //printStringToScreen("check");
        }

        switch(count34){

            case 1: x='g';
                break;
            case 2: x='h';
                break;
            case 3: x='i';
                break;
            case 4: x='j';
                break;
            case 5: x='k';
                break;
            case 6: x='l';
                break;
            default: break;
        }

        if(pin==GPIO_10 && value==LOW) {
            count10++;
            delay(250);
            //printStringToScreen("check");
        }

        switch(count10){

            case 1: x='m';
                break;
            case 2: x='n';
                break;
            case 3: x='o';
                break;
            case 4: x='p';
                break;
            case 5: x='q';
                break;
            default: break;
        }

        if(pin==GPIO_174 && value==LOW) {
            count174++;
            delay(250);
            //printStringToScreen("check");
        }

        switch(count174){

            case 1: x='r';
                break;
            case 2: x='s';
                break;
            case 3: x='t';
                break;
            case 4: x='u';
                break;
            case 5: x='v';
                break;
            default: break;
        }

        if(pin==GPIO_175 && value==LOW) {
            count175++;
            delay(250);
            //printStringToScreen("check");
        }

        switch(count175){

            case 1: x=' ';
                break;
            case 2: x='w';
                break;
            case 3: x='x';
                break;
            case 4: x='y';
                break;
            case 5: x='z';
                break;
            default: break;
        }

        //SELECTOR BUTTON ACTION CODE
        if(pin==GPIO_32 && value==LOW){
            printCharacterToScreen(x);
            count37=count34=count10=count174=count175=0;
            delay(250);
        }

    }
}
